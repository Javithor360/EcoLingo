---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import {SITE_TITLE, SITE_DESCRIPTION} from '../../consts';
import {getCollection} from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import WelcomeModal from "../../components/react/WelcomeModal";
import getRandomGradient from '../../utils/getRandomGradients';
import {Icon} from 'astro-icon/components';

// Función para verificar si una lección está desbloqueada
const isLessonUnlocked = (pubDate: Date) => {
    const now = new Date();
    const unlockDate = new Date(pubDate);
    unlockDate.setDate(unlockDate.getDate() - 7); // 7 días antes de la publicación
    return now >= unlockDate;
};

const lessons = (await getCollection('lessons')).sort(
    (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf(),
);

---

<!doctype html>
<html lang="en">
<head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION}/>
</head>
<body class="min-h-screen bg-base-100">
<Header/>
<main class="container mx-auto px-4 py-8 max-w-[960px]">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        {
            lessons.map((lesson, index) => {
                const unlocked = isLessonUnlocked(lesson.data.pubDate);
                const unlockDate = new Date(lesson.data.pubDate);
                unlockDate.setDate(unlockDate.getDate() - 7);

                // Contenido de la card
                const cardContent = (
                        <div class={`card overflow-hidden ${index === 0 ? 'md:col-span-2' : ''}`}>
                            <figure class="relative ">
                            {lesson.data.heroImage ? (
                                    <img
                                            src={lesson.data.heroImage}
                                            alt=""
                                            class={`w-full ${index === 0 ? 'md:h-80' : 'h-52'}  object-cover`}
                                    />
                            ) : (
                                    <div
                                            class={`w-full ${index === 0 ? 'md:h-80' : 'h-52'}  ${getRandomGradient()}`}
                                    />
                            )}

                            {!unlocked && (
                                    <div class="absolute inset-0 bg-base-300/80 backdrop-blur-sm flex flex-col items-center justify-center">
                                        <Icon
                                                name="mdi:lock"
                                                class="w-12 h-12 text-base-content"
                                        />
                                        <p class="text-base-content text-xl mt-4 px-4 text-center">
                                            Se desbloquea el {unlockDate.toLocaleDateString()}
                                        </p>
                                    </div>
                            )}
                            </figure>

                            <div class="card-body p-3">
                                <h2 class={`${index === 0 ? 'text-4xl text-center' : 'text-2xl'} text-gray-900`}>
                                    {lesson.data.title}
                                </h2>

                                <div class={`grid items-center grid-cols-2 ${index === 0 ? 'md:grid-cols-1' : ''}`}>
                                    <p class={`${index === 0 ? 'text-center' : ''} text-base-content/70 m-0`}>
                                        <FormattedDate date={lesson.data.pubDate}/>
                                    </p>
                                    <div class={`card-actions ${index === 0 ? 'justify-center' : 'justify-end'}`}>
                                        {unlocked ? (
                                                <a
                                                        href={`/lessons/${lesson.id}/`}
                                                        class="btn text-lg btn-primary"
                                                >
                                                    Ver lección
                                                    <Icon name="mdi:arrow-right" class="w-4 h-4 ml-2"/>
                                                </a>
                                        ) : (
                                                <button
                                                        class="btn text-lg btn-disabled"
                                                        disabled
                                                >
                                                    Bloqueado
                                                    <Icon name="mdi:lock" class="w-4 h-4 ml-2"/>
                                                </button>
                                        )}
                                    </div>
                                </div>
                            </div>
                        </div>
                );

                // Renderizar la card envuelta en un <a> si está desbloqueada
                return unlocked ? (
                        <a href={`/lessons/${lesson.id}/`} class="block contents">
                            {cardContent}
                        </a>
                ) : (
                    cardContent
                );
            })
        }
    </div>
</main>
<Footer/>
<WelcomeModal client:load/>
</body>
</html>