---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import {SITE_TITLE, SITE_DESCRIPTION} from '../../consts';
import {getCollection} from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import WelcomeModal from "../../components/react/WelcomeModal";
import getRandomGradient from '../../utils/getRandomGradients';
import {Icon} from 'astro-icon/components';

// Ya no usamos la función en el servidor
// En su lugar, obtenemos todas las lecciones sin filtrar
const lessons = (await getCollection('lessons')).sort(
    (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf(),
);
---

<!doctype html>
<html lang="en">
<head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION}/>
</head>
<body class="min-h-screen bg-base-100">
<Header/>
<main class="container mx-auto px-4 py-8 max-w-[960px]">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        {
            lessons.map((lesson, index) => {
                // Guardamos la fecha de publicación y la fecha de desbloqueo como atributos data-*
                // para que el JavaScript del cliente pueda acceder a ellos
                const pubDate = lesson.data.pubDate;
                const unlockDate = new Date(pubDate);
                unlockDate.setDate(unlockDate.getDate() - 7);

                return (
                        <div class={`lesson-card card overflow-hidden ${index === 0 ? 'md:col-span-2' : ''}`}
                             data-pub-date={pubDate.toISOString()}
                             data-unlock-date={unlockDate.toISOString()}
                             data-lesson-id={lesson.id}>
                            <figure class="relative">
                                {lesson.data.heroImage ? (
                                        <img
                                                src={lesson.data.heroImage}
                                                alt=""
                                                class={`w-full ${index === 0 ? 'md:h-80' : 'h-52'} object-cover`}
                                        />
                                ) : (
                                        <div
                                                class={`w-full rounded-md ${index === 0 ? 'md:h-80' : 'h-52'} ${getRandomGradient()}`}
                                        />
                                )}

                                {/* El overlay de bloqueo ahora se gestionará con JavaScript */}
                                <div class="lock-overlay absolute inset-0 bg-base-300/80 backdrop-blur-sm flex flex-col items-center justify-center hidden">
                                    <Icon
                                            name="mdi:lock"
                                            class="w-12 h-12 text-base-content"
                                    />
                                    <p class="text-base-content text-xl mt-4 px-4 text-center unlock-date-text">
                                        Se desbloquea el {unlockDate.toLocaleDateString()}
                                    </p>
                                </div>
                            </figure>

                            <div class="card-body p-3">
                                <h2 class={`${index === 0 ? 'text-4xl text-center' : 'text-2xl'} text-gray-900`}>
                                    {lesson.data.title}
                                </h2>

                                <div class={`grid items-center grid-cols-2 ${index === 0 ? 'md:grid-cols-1' : ''}`}>
                                    <p class={`${index === 0 ? 'text-center' : ''} text-base-content/70 m-0`}>
                                        <FormattedDate date={lesson.data.pubDate}/>
                                    </p>
                                    <div class={`card-actions ${index === 0 ? 'justify-center' : 'justify-end'}`}>
                                        {/* Ambos botones están presentes, pero se mostrarán u ocultarán con JavaScript */}
                                        <a
                                                href={`/lessons/${lesson.id}/`}
                                                class="unlocked-button btn text-lg btn-primary"
                                        >
                                            Ver lección
                                            <Icon name="mdi:arrow-right" class="w-4 h-4 ml-2"/>
                                        </a>
                                        <button
                                                class="locked-button btn text-lg btn-disabled hidden"
                                                disabled
                                        >
                                            Bloqueado
                                            <Icon name="mdi:lock" class="w-4 h-4 ml-2"/>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                );
            })
        }
    </div>
</main>
<Footer/>
<WelcomeModal client:load/>

<script>
    // Esta función se ejecutará en el cliente
    function checkLessonStatus() {
        const now = new Date();
        const lessonCards = document.querySelectorAll('.lesson-card');

        lessonCards.forEach(card => {
            const unlockDate = new Date(card.dataset.unlockDate);
            const lessonId = card.dataset.lessonId;
            const isUnlocked = now >= unlockDate;

            const lockOverlay = card.querySelector('.lock-overlay');
            const unlockedButton = card.querySelector('.unlocked-button');
            const lockedButton = card.querySelector('.locked-button');

            if (isUnlocked) {
                // Lección desbloqueada
                lockOverlay.classList.add('hidden');
                unlockedButton.classList.remove('hidden');
                lockedButton.classList.add('hidden');

                // Convertir la tarjeta en un enlace
                card.addEventListener('click', (e) => {
                    // Solo redirigir si no se hizo clic en el botón
                    if (!e.target.closest('.unlocked-button')) {
                        window.location.href = `/lessons/${lessonId}/`;
                    }
                });
                card.classList.add('cursor-pointer');
            } else {
                // Lección bloqueada
                lockOverlay.classList.remove('hidden');
                unlockedButton.classList.add('hidden');
                lockedButton.classList.remove('hidden');
            }
        });
    }

    // Ejecutar cuando el DOM esté listo
    document.addEventListener('DOMContentLoaded', checkLessonStatus);
</script>

</body>
</html>